---
# - name: Disable TTY
#   lineinfile:
#     path: /etc/sudoers
#     state: absent
#     regexp: '^Defaults\s+requiretty.*$'
#   when: disable_tty
- name: make sure group exists
  group:
    name: "{{ main_item.vault_user_group | default('vault') }}"
    state: present

- name: add vault user to group
  user:
    name: "{{ main_item.vault_user | default('vault') }}"
    system: yes
    group: "{{ main_item.vault_user_group }}"

- name: Activate vault services
  service:
    name: "{{ main_item.vault_agent_service }}"
    state: started
    enabled: yes

- name: Wait for service "{{ main_item.vault_agent_service }}" to be running
  service_facts:
  register: result
  until: result.ansible_facts.services[main_item.vault_agent_service + '.service'].state == 'running'
  retries: 10
  delay: 6

- name: deploy consul-template
  block:
    - name: Create directory if it does not exist
      file:
        path: "{{ item.dest | dirname }}"
        state: directory
        mode: '0755'
      with_items: "{{ main_item.files_to_copy }}"
  
    - name: copy files
      copy:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        mode: "{{ item.mode | default('0755') }}"
        owner: "{{ item.owner | default('vault') }}"
        group: "{{ item.group | default('vault') }}"
      with_items: "{{ main_item.files_to_copy }}"

    - name: add templates
      template:
        src: "{{ item.src }}"
        dest: "{{ item.dest }}"
        owner: "{{ item.owner | default('root') }}"
        group: "{{ item.group | default('root') }}"
        mode: "{{ item.mode | default('0755') }}"
      notify:
        - restart consul-chr-fqdn.service
        - restart consul-custom-cert.service
      with_items: "{{ main_item.templates_to_copy }}"

    - name: start consul-template services
      systemd:
        name: "{{ item }}"
        state: started
        enabled: yes
      loop: "{{ main_item.consul_template_services }}"
    
    - name: Wait for service "{{ item }}" to be running
      service_facts:
      register: result
      until: result.ansible_facts.services[item + '.service'].state == 'running'
      retries: 10
      delay: 6
      loop: "{{ main_item.consul_template_services }}"
    
  when: main_item.consul_template_enabled|bool

- name: Flush handlers
  meta: flush_handlers
