---
- name: Ensure mandatory variables are defined
  fail:
    msg: "{{ item }} is undefined"
  when: (vars[item] is undefined) or (vars[item] | length == 0)
  with_items:
    - connect_cluster_uri
    - connect_replicator_name

- name: "Check to see if {{ connect_replicator_name }} exists in {{ connect_cluster_uri}}"
  uri:
    url: "{{ connect_cluster_uri }}/connectors/{{ connect_replicator_name }}/config"
    status_code: 200
    timeout: 1
  register: replicator_config
  changed_when: false
  failed_when: replicator_config.status == 404
  until: replicator_config.status == 200 or replicator_config.status == 404
  retries: 60
  delay: 1

- name: Create new config var for replicator
  set_fact:
    create_config: 
      name: "{{ connect_replicator_name }}"
      config: {}

- name: "Recreate config to recreate {{ connect_replicator_name }}"
  set_fact:
    create_config: "{{ create_config | combine({'config': { item.key: item.value } }, recursive=True ) }}"
  when: "{{ item.key not in ['name'] }}"
  with_dict: "{{ replicator_config.json }}"

- name: "Show filtered replicator config"
  debug:
    msg: "{{ create_config }}"

- name: "Delete {{ connect_replicator_name }} from {{ connect_cluster_uri }}"
  uri:
    url: "{{ connect_cluster_uri }}/connectors/{{ connect_replicator_name }}"
    status_code: 204
    timeout: 1
    method: DELETE
  register: replicator_delete
  changed_when: replicator_delete.status == 204
  failed_when: replicator_delete.status == 404
  until: replicator_delete.status == 204 or replicator_delete.status == 404
  retries: 360
  delay: 5

- name: Pause for 1 minute to let connect clean up
  pause:
    minutes: 1

- name: "Post {{ connect_replicator_name }} to {{ connect_cluster_uri }}"
  uri:
    url: "{{ connect_cluster_uri }}/connectors"
    body: "{{ create_config | to_json }}"
    status_code: 201
    timeout: 1
    method: POST
    headers:
      Content-Type: application/json
  register: replicator_post
  changed_when: replicator_post.status == 201
  until: replicator_post.status == 201
  retries: 15
  delay: 5

- name: "Get {{ connect_replicator_name }} status in {{ connect_cluster_uri }}"
  uri:
    url: "{{ connect_cluster_uri }}/connectors/{{ connect_replicator_name }}"
    status_code: 200
    timeout: 1
    method: GET
  register: replicator_get
  changed_when: replicator_get.status == 200
  until: replicator_get.status == 200
  retries: 5
  delay: 1

- name: "Show status"
  debug:
    msg: "{{ replicator_get.json }}"

